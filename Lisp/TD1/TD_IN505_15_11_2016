1)
1 > (+ (- 5 1) (+ 3 7))
14
2 > (list 1 (+ 2 3))
(1 5)
3 > (if (listp 1) (+ 1 2) (+ 3 4))
7
4 > (list (and (listp 3) t) (+ 1 2))
(NIL 3)

2)
(defun quatre(x) (car (cdr (cdr (cdr x)))))

3)
(defun  plus_grand(x y) (if(> x y) x y))

4)
(defun listargp(x) (if(null x) nil (if(listp (car x)) t (listargp(cdr x)))))

5)
(defun point(x) (if (= x 0) () (progn (format t ".") (point(- x 1)))))

(defun nomba(x) (if(null x) 0 (if(eql (car x) 'a) (+ (nomba (cdr x)) 1) (nomba (cdr x)))))

6)
enigme renvoie T si la liste en paramètre contient un nil ou nil si la liste ne contient pas de nil.

mystere renvoie la position du premier symbole X est présent dans la liste Y.

7)
(defun summit(lst) (if(null lst) 0 (let((X (car lst)))
(if (null X) (summit (cdr lst)) (+ X (summit (cdr lst)))))))

autre version:
(defun summit(lst) (apply #'+(remove nil lst)))

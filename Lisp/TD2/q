CLISP(1)                                         Platform: x86_64-unknown-linux-gnu                                         CLISP(1)



NNAAMMEE
       clisp - AANNSSII[38] CCoommmmoonn LLiisspp[1] compiler, interpreter and debugger.

SSYYNNOOPPSSIISS
       cclliisspp [[--hh] | [----hheellpp]] [----vveerrssiioonn] [----lliicceennssee] [--hheellpp--iimmaaggee] [--BB _l_i_s_p_-_l_i_b_-_d_i_r] [--bb] [--KK _l_i_n_k_i_n_g_-_s_e_t] [--MM _m_e_m_-_f_i_l_e]
             [--mm _m_e_m_o_r_y_-_s_i_z_e] [--LL _l_a_n_g_u_a_g_e] [--NN _l_o_c_a_l_e_-_d_i_r] [--EE_d_o_m_a_i_n _e_n_c_o_d_i_n_g] [[--qq] | [----qquuiieett] | [----ssiilleenntt] | [--vv] | [----vveerrbboossee]]
             [--oonn--eerrrroorr _a_c_t_i_o_n] [--rreeppll] [--ww] [--II] [--ddiissaabbllee--rreeaaddlliinnee] [[--aannssii] | [--ttrraaddiittiioonnaall]] [--mmooddeerrnn] [--pp _p_a_c_k_a_g_e] [--CC] [--nnoorrcc]
             [--llpp _d_i_r_e_c_t_o_r_y...] [--ii _i_n_i_t_-_f_i_l_e...] [--cc [--ll] _l_i_s_p_-_f_i_l_e [--oo _o_u_t_p_u_t_-_f_i_l_e]...] [--xx _e_x_p_r_e_s_s_i_o_n_s...]
             [_l_i_s_p_-_f_i_l_e [_a_r_g_u_m_e_n_t...]]

DDEESSCCRRIIPPTTIIOONN
       Invokes the CCoommmmoonn LLiisspp[1] interpreter and compiler.

   IInntteerraaccttiivvee MMooddee
       When called without arguments, executes the rreeaadd--eevvaall--pprriinntt lloooopp[2], in which expressions are in turn

       ·   RREEAADD[3] from the standard input,

       ·   EEVVAALL[4]uated by the lisp interpreter,

       ·   and their results are PPRRIINNTT[5]ed to the standard output.

   NNoonn--IInntteerraaccttiivvee ((BBaattcchh)) MMooddee
       Invoked with --cc, compiles the specified lisp files to a platform-independent bytecode which can be executed more efficiently.

       Invoked with --xx, executes the specified lisp expressions.

       Invoked with _l_i_s_p_-_f_i_l_e, runs the specified lisp file.

OOPPTTIIOONNSS
       --hh
       ----hheellpp
           Displays a help message on how to invoke CCLLIISSPP[6].

       ----vveerrssiioonn
           Displays the CCLLIISSPP[6] version number, as given by the function LLIISSPP--IIMMPPLLEEMMEENNTTAATTIIOONN--VVEERRSSIIOONN[7], the value of the variable
           _*_F_E_A_T_U_R_E_S_*, as well some other information.

       ----lliicceennssee
           Displays a summary of the licensing information, the GGNNUU[8] GGPPLL[9].

       --hheellpp--iimmaaggee
           Displays information about the memory image being invoked: whether is it suitable for scripting as well as the
           ::DDOOCCUUMMEENNTTAATTIIOONN supplied to EEXXTT::SSAAVVEEIINNIITTMMEEMM.

       --BB _l_i_s_p_-_l_i_b_-_d_i_r
           Specifies the installation directory. This is the directory containing the linking sets and other data files. This option
           is normally not necessary, because the installation directory is already built-in into the cclliisspp executable. Directory
           _l_i_s_p_-_l_i_b_-_d_i_r can be changed dynamically using the SSYYMMBBOOLL--MMAACCRROO[10] _C_U_S_T_O_M_:_*_L_I_B_-_D_I_R_E_C_T_O_R_Y_*.

       --bb
           Print the installation directory and exit immediately. The namestring of _C_U_S_T_O_M_:_*_L_I_B_-_D_I_R_E_C_T_O_R_Y_* is printed without any
           quotes. This is mostly useful in module Makefiles, see, e.g., modules/syscalls/Makefile.in (file in the CLISP sources).

       --KK _l_i_n_k_i_n_g_-_s_e_t
           Specifies the linking set to be run. This is a directory (relative to the _l_i_s_p_-_l_i_b_-_d_i_r) containing at least a main
           executable (runtime) and an initial memory image. Possible values are

           bbaassee
               the core CCLLIISSPP[6]

           ffuullll
               core plus all the modules with which this installation was built, see Section 32.2, “External Modules”.

           The default is bbaassee.

       --MM _m_e_m_-_f_i_l_e
           Specifies the initial memory image. This must be a memory dump produced by the EEXXTT::SSAAVVEEIINNIITTMMEEMM function by this cclliisspp
           runtime.  It may have been compressed using GGNNUU[8] ggzziipp[11].

       --mm _m_e_m_o_r_y_-_s_i_z_e
           Sets the amount of memory CCLLIISSPP[6] tries to grab on startup. The amount may be given as

           _n
           _nBB
               measured in bytes

           _n
           _nWW
               measured in machine words (4×_n on 32-bit platforms, 8×_n on 64-bit platforms)

           _nKK
           _nKKBB
               measured in kilobytes

           _nKKWW
               measured in kilowords

           _nMM
           _nMMBB
               measured in megabytes

           _nMMWW
               measured in megawords

           The default is 3 megabytes.  The argument is constrained above 100 KB.

           This version of CCLLIISSPP[6] is not likely to actually use the entire _m_e_m_o_r_y_-_s_i_z_e since garbage-collection will periodically
           reduce the amount of used memory. It is therefore common to specify 10 MB even if only 2 MB are going to be used.

       --LL _l_a_n_g_u_a_g_e
           Specifies the language CCLLIISSPP[6] uses to communicate with the user. This may be one of eenngglliisshh, ggeerrmmaann, ffrreenncchh, ssppaanniisshh,
           dduuttcchh, rruussssiiaann, ddaanniisshh. Other languages may be specified through the eennvviirroonnmmeenntt vvaarriiaabbllee[12] LLAANNGG, provided the
           corresponding message catalog is installed.  The language may be changed dynamically using the SSYYMMBBOOLL--MMAACCRROO[10]
           _C_U_S_T_O_M_:_*_C_U_R_R_E_N_T_-_L_A_N_G_U_A_G_E_*.

       --NN _l_o_c_a_l_e_-_d_i_r
           Specifies the base directory of locale files.  CCLLIISSPP[6] will search its message catalogs in
           _l_o_c_a_l_e_-_d_i_r/_l_a_n_g_u_a_g_e/LC_MESSAGES/clisp.mo. This directory may be changed dynamically using the SSYYMMBBOOLL--MMAACCRROO[10]
           _C_U_S_T_O_M_:_*_C_U_R_R_E_N_T_-_L_A_N_G_U_A_G_E_*.

       --EE_d_o_m_a_i_n _e_n_c_o_d_i_n_g
           Specifies the encoding used for the given domain, overriding the default which depends on the eennvviirroonnmmeenntt vvaarriiaabbllee[12]s
           LLCC__AALLLL, LLCC__CCTTYYPPEE, LLAANNGG.  _d_o_m_a_i_n can be

           ffiillee
               affecting _C_U_S_T_O_M_:_*_D_E_F_A_U_L_T_-_F_I_L_E_-_E_N_C_O_D_I_N_G_*

           ppaatthhnnaammee
               affecting _C_U_S_T_O_M_:_*_P_A_T_H_N_A_M_E_-_E_N_C_O_D_I_N_G_*

           tteerrmmiinnaall
               affecting _C_U_S_T_O_M_:_*_T_E_R_M_I_N_A_L_-_E_N_C_O_D_I_N_G_*

           ffoorreeiiggnn
               affecting _C_U_S_T_O_M_:_*_F_O_R_E_I_G_N_-_E_N_C_O_D_I_N_G_*

           mmiisscc
               affecting _C_U_S_T_O_M_:_*_M_I_S_C_-_E_N_C_O_D_I_N_G_*

           _b_l_a_n_k
               affecting all of the above.


               WWaarrnniinngg
               Note that the values of these SSYYMMBBOOLL--MMAACCRROO[10]s that have been saved in a memory image are ignored: these
               SSYYMMBBOOLL--MMAACCRROO[10]s are reset based on the OS environment aafftteerr the memory image is loaded. You have to use the RC
               file, _C_U_S_T_O_M_:_*_I_N_I_T_-_H_O_O_K_S_* or init function to set them on startup, but it is best to set the aforementioned
               eennvviirroonnmmeenntt vvaarriiaabbllee[12]s appropriately for consistency with other programs. See Section 31.1, “Customizing CLISP
               Process Initialization and Termination”.

       --qq
       ----qquuiieett
       ----ssiilleenntt
       --vv
       ----vveerrbboossee
           Change verbosity level: by default, CCLLIISSPP[6] displays a banner at startup and a good-bye message when quitting, and
           initializes _*_L_O_A_D_-_V_E_R_B_O_S_E_*[13] and _*_C_O_M_P_I_L_E_-_V_E_R_B_O_S_E_*[14] to TT[15], and _*_L_O_A_D_-_P_R_I_N_T_*[13] and _*_C_O_M_P_I_L_E_-_P_R_I_N_T_*[14] to
           NNIILL[16], as per [ANSI CL standard]. The first --qq removes the banner and the good-bye message, the second sets variables
           _*_L_O_A_D_-_V_E_R_B_O_S_E_*[13], _*_C_O_M_P_I_L_E_-_V_E_R_B_O_S_E_*[14] and _C_U_S_T_O_M_:_*_S_A_V_E_I_N_I_T_M_E_M_-_V_E_R_B_O_S_E_* to NNIILL[16]. The first --vv sets variables
           _C_U_S_T_O_M_:_*_R_E_P_O_R_T_-_E_R_R_O_R_-_P_R_I_N_T_-_B_A_C_K_T_R_A_C_E_*, _*_L_O_A_D_-_P_R_I_N_T_*[13] and _*_C_O_M_P_I_L_E_-_P_R_I_N_T_*[14] to TT[15], the second sets
           _C_U_S_T_O_M_:_*_L_O_A_D_-_E_C_H_O_* to TT[15]. These settings affect the output produced by --ii and --cc options. Note that these settings
           persist into the rreeaadd--eevvaall--pprriinntt lloooopp[2]. Repeated --qq and --vv cancel each other, e.g., --qq --qq --vv --vv --vv is equivalent to --vv.

       --oonn--eerrrroorr _a_c_t_i_o_n
           Establish global error handlers, depending on _a_c_t_i_o_n:.PP appease
               ccoonnttiinnuuaabbllee[17] EERRRROORR[18]s are turned into WWAARRNNIINNGG[19]s (with EEXXTT::AAPPPPEEAASSEE--CCEERRRROORRSS) other EERRRROORR[18]s are handled in
               the default way

           debug
               EERRRROORR[18]s IINNVVOOKKEE--DDEEBBUUGGGGEERR[20] (the normal rreeaadd--eevvaall--pprriinntt lloooopp[2] behavior), disables batch mode imposed by --cc, --xx,
               and _l_i_s_p_-_f_i_l_e,

           abort
               ccoonnttiinnuuaabbllee[17] EERRRROORR[18]s are appeased, other EERRRROORR[18]s are AABBOORRTT[21]ed with EEXXTT::AABBOORRTT--OONN--EERRRROORR

           exit
               ccoonnttiinnuuaabbllee[17] EERRRROORR[18]s are appeased, other EERRRROORR[18]s terminate CCLLIISSPP[6] with EEXXTT::EEXXIITT--OONN--EERRRROORR (the normal batch
               mode behavior).

           See also EEXXTT::SSEETT--GGLLOOBBAALL--HHAANNDDLLEERR.

       --rreeppll
           Start an interactive rreeaadd--eevvaall--pprriinntt lloooopp[2] after processing the --cc, --xx, and _l_i_s_p_-_f_i_l_e options and on any EERRRROORR[18]
           SSIIGGNNAALL[22]ed during that processing.

           Disables batch mode.

       --ww
           Wait for a keypress after program termination.

       --II
           Interact better with EEmmaaccss[23] (useful when running CCLLIISSPP[6] under EEmmaaccss[23] using SSLLIIMMEE[24], IILLIISSPP[25] et al). With this
           option, CCLLIISSPP[6] interacts in a way that EEmmaaccss[23] can deal with:

           ·   unnecessary prompts are not suppressed.

           ·   The GGNNUU[8] rreeaaddlliinnee[26] library treats TAB (see TAB key) as a normal self-inserting character (see Q: A.4.6).

       --ddiissaabbllee--rreeaaddlliinnee
           Do not use GGNNUU[8] rreeaaddlliinnee[26] even when it has been linked against. This can be used if one wants to paste non-_A_S_C_I_I[27]
           characters, or when GGNNUU[8] rreeaaddlliinnee[26] misbehaves due to installation (different versions on the build and install
           machines) or setup (bad TTEERRMM eennvviirroonnmmeenntt vvaarriiaabbllee[12] value) issues.

       --aannssii
           Comply with the [ANSI CL standard] specification even where CCLLIISSPP[6] has been traditionally different by setting the
           SSYYMMBBOOLL--MMAACCRROO[10] _C_U_S_T_O_M_:_*_A_N_S_I_* to TT[15].

       --ttrraaddiittiioonnaall
           Traditional: reverses the residual effects of --aannssii in the saved memory image.

       --mmooddeerrnn
           Provides a modern view of symbols: at startup the _*_P_A_C_K_A_G_E_*[28] variable will be set to the “CS-COMMON-LISP-USER”
           package, and the _*_P_R_I_N_T_-_C_A_S_E_*[29] will be set to ::DDOOWWNNCCAASSEE. This has the effect that symbol lookup is case-sensitive
           (except for keywords and old-style packages) and that keywords and uninterned symbols are printed with lower-case
           preferrence. See Section 11.5, “Package Case-Sensitivity”.

       --pp _p_a_c_k_a_g_e
           At startup the value of the variable _*_P_A_C_K_A_G_E_*[28] will be set to the package named _p_a_c_k_a_g_e. The default is the value of
           _*_P_A_C_K_A_G_E_*[28] when the image was saved, normally ““CCOOMMMMOONN--LLIISSPP--UUSSEERR””[30].

       --CC
           Compile when loading: at startup the value of the variable _C_U_S_T_O_M_:_*_L_O_A_D_-_C_O_M_P_I_L_I_N_G_* will be set to TT[15]. Code being
           LLOOAADD[31]ed will then be CCOOMMPPIILLEE[32]d on the fly. This results in slower loading, but faster execution.

       --nnoorrcc
           Normally CCLLIISSPP[6] loads the user ““rruunn ccoonnttrrooll”” ((RRCC))[33] file on startup (this happens aafftteerr the --CC option is processed).
           The file loaded is .clisprc.lisp or .clisprc.fas in the home directory UUSSEERR--HHOOMMEEDDIIRR--PPAATTHHNNAAMMEE[34], whichever is newer.
           This option, --nnoorrcc, prevents loading of the RC file.

       --llpp _d_i_r_e_c_t_o_r_y
           Specifies directories to be added to _C_U_S_T_O_M_:_*_L_O_A_D_-_P_A_T_H_S_* at startup. This is done aafftteerr loading the RC file (so that it
           does not override the command-line option) but bbeeffoorree loading the init-files specified by the --ii options (so that the
           init-files will be searched for in the specified directories). Several --llpp options can be given; all the specified
           directories will be added.

       --ii _i_n_i_t_-_f_i_l_e
           Specifies initialization files to be LLOOAADD[31]ed at startup. These should be lisp files (source or compiled). Several --ii
           options can be given; all the specified files will be loaded in order.

       --cc _l_i_s_p_-_f_i_l_e
           Compiles the specified _l_i_s_p_-_f_i_l_es to bytecode (*.fas). The compiled files can then be LLOOAADD[31]ed instead of the sources
           to gain efficiency.

           Imposes batch mode.

       --oo _o_u_t_p_u_t_f_i_l_e
           Specifies the output file or directory for the compilation of the last specified _l_i_s_p_-_f_i_l_e.

       --ll
           Produce a bytecode DDIISSAASSSSEEMMBBLLEE[35] listing (*.lis) of the files being compiled. Useful only for debugging. See
           Section 24.1, “Function COMPILE-FILE” for details.

       --xx _e_x_p_r_e_s_s_i_o_n_s
           Executes a series of arbitrary expressions instead of a rreeaadd--eevvaall--pprriinntt lloooopp[2]. The values of the expressions will be
           output to _*_S_T_A_N_D_A_R_D_-_O_U_T_P_U_T_*[36]. Due to the argument processing done by the shell, the _e_x_p_r_e_s_s_i_o_n_s must be enclosed in
           double quotes, and double quotes and backslashes must be escaped with backslashes.

           Imposes batch mode.

       _l_i_s_p_-_f_i_l_e [ _a_r_g_u_m_e_n_t ... ]
           Loads and executes a _l_i_s_p_-_f_i_l_e, as described in Section 32.6.2, “Scripting with CLISP”. There will be no rreeaadd--eevvaall--pprriinntt
           lloooopp[2]. Before _l_i_s_p_-_f_i_l_e is loaded, the variable _E_X_T_:_*_A_R_G_S_* will be bound to a list of strings, representing the
           _a_r_g_u_m_e_n_ts.  The first line of _l_i_s_p_-_f_i_l_e may start with ##!!, thus permitting CCLLIISSPP[6] to be used as a script interpreter.
           If _l_i_s_p_-_f_i_l_e is --, the _*_S_T_A_N_D_A_R_D_-_I_N_P_U_T_*[36] is used instead of a file.

           This option is _d_i_s_a_b_l_e_d if the memory image was created by EEXXTT::SSAAVVEEIINNIITTMMEEMM with NNIILL[16] ::SSCCRRIIPPTT argument. In that case
           the LLIISSTT[37] _E_X_T_:_*_A_R_G_S_* starts with _l_i_s_p_-_f_i_l_e.

           This option must be the last one.

           No RC file will be executed.

           Imposes batch mode.

       As usual, ---- stops option processing and places all remaining command line arguments into _E_X_T_:_*_A_R_G_S_*.

LLAANNGGUUAAGGEE RREEFFEERREENNCCEE
       The language implemented is AANNSSII[[3399]][38] CCoommmmoonn LLiisspp[1]. The implementation mostly conforms to the ANSI Common Lisp standard,
       see Section 31.10, “Maximum ANSI CL compliance”.  [ANSI CL] ANSI CL standard1994. ANSI INCITS 226-1994 (R1999)
           Information Technology - Programming Language - Common Lisp[40]
           [formerly ANSI X3.226-1994 (R1999)].

CCOOMMMMAANNDD LLIINNEE UUSSEERR EENNVVIIRROONNMMEENNTT
       hheellpp
           get context-sensitive on-line help, see Chapter 25, Environment.

       (AAPPRROOPPOOSS _n_a_m_e)
           list the SSYYMMBBOOLL[41]s matching _n_a_m_e.

       (DDEESSCCRRIIBBEE _s_y_m_b_o_l)
           describe the _s_y_m_b_o_l.

       (exit)
       (quit)
       (bye)
           quit CCLLIISSPP[6].

       EOF (Control+D on UUNNIIXX[42])
           leave the current level of the rreeaadd--eevvaall--pprriinntt lloooopp[2] (see also Section 1.1, “Special Symbols ”).

       arrow keys
           for editing and viewing the input history, using the GGNNUU[8] rreeaaddlliinnee[26] library.

       TAB key
           Context sensitive:

           ·   If you are in the “function position” (in the first symbol after an opening paren or in the first symbol after a
               ##´´[44]), the completion is limited to the symbols that name functions.

           ·   If you are in the "filename position" (inside a string after ##PP[45]), the completion is done across file names,
               GGNNUU[8] bbaasshh[46]-style.

           ·   If you have not typed anything yet, you will get a help message, as if by the hheellpp command.

           ·   If you have not started typing the next symbol (i.e., you are at a whitespace), the current function or macro is
               DDEESSCCRRIIBBEEd.

           ·   Otherwise, the symbol you are currently typing is completed.


UUSSIINNGG AANNDD EEXXTTEENNDDIINNGG CCLLIISSPP
       CCoommmmoonn LLiisspp[1] is a _p_r_o_g_r_a_m_m_a_b_l_e programming language.  —JJoohhnn FFooddeerraarroo[47].PP When CCLLIISSPP[6] is invoked, the runtime loads the
       initial memory image and outputs the prompt; at which one can start typing DDEEFFVVAARR[48]s, DDEEFFUUNN[49]s and DDEEFFMMAACCRROO[50]s.

       To avoid having to re-enter the same definitions by hand in every session, one can create a lisp file with all the variables,
       functions, macros, etc.; (optionally) compile it with CCOOMMPPIILLEE--FFIILLEE[51]; and LLOOAADD[31] it either by hand or from the RC file;
       or save a memory image to avoid the LLOOAADD[31] overhead.

       However, sometimes one needs to use some functionality implemented in another language, e.g., call a CC[52] library function.
       For that one uses the Foreign Function Interface and/or the External Modules facility. Finally, the truly adventurous ones
       might delve into Extending the Core.

FFIILLEESS
       cclliisspp
       cclliisspp..eexxee
           startup driver (an executable or, rarely, a shell script) which remembers the location of the runtime and starts it with
           the appropriate arguments

       lisp.run
       lisp.exe
           main executable (runtime) - the part of CCLLIISSPP[6] implemented in CC[52].

       lispinit.mem
           initial memory image (the part of CCLLIISSPP[6] implemented in lisp)

       config.lisp
           site-dependent configuration (should have been customized before CCLLIISSPP[6] was built); see Section 31.12, “Customizing
           CLISP behavior”

       *.lisp
           lisp source

       *.fas
           lisp code, compiled by CCLLIISSPP[6]

       *.lib
           lisp source library information, generated by CCOOMMPPIILLEE--FFIILLEE, see Section 24.3, “Function REQUIRE”.

       *.c
           C code, compiled from lisp source by CCLLIISSPP[6] (see Section 32.3, “The Foreign Function Call Facility”)

       For the CCLLIISSPP[6] source files, see Chapter 34, The source files of CLISP.

EENNVVIIRROONNMMEENNTT
       All eennvviirroonnmmeenntt vvaarriiaabbllee[12]s that CCLLIISSPP[6] uses are read at most once.

       CCLLIISSPP__LLAANNGGUUAAGGEE
           specifies the language CCLLIISSPP[6] uses to communicate with the user. The legal values are identical to those of the --LL
           option which can be used to override this eennvviirroonnmmeenntt vvaarriiaabbllee[12].

       LLCC__CCTTYYPPEE
           specifies the locale which determines the character set in use. The value can be of the form _l_a_n_g_u_a_g_e or _l_a_n_g_u_a_g_e___c_o_u_n_t_r_y
           or _l_a_n_g_u_a_g_e___c_o_u_n_t_r_y.._c_h_a_r_s_e_t, where _l_a_n_g_u_a_g_e is a two-letter ISO 639 language code (lower case), _c_o_u_n_t_r_y is a two-letter
           ISO 3166 country code (upper case).  _c_h_a_r_s_e_t is an optional character set specification, and needs normally not be given
           because the character set can be inferred from the language and country. This eennvviirroonnmmeenntt vvaarriiaabbllee[12] can be overridden
           with the --EEddoommaaiinn eennccooddiinngg option.

       LLAANNGG
           specifies the language CCLLIISSPP[6] uses to communicate with the user, unless it is already specified through the eennvviirroonnmmeenntt
           vvaarriiaabbllee[12] CCLLIISSPP__LLAANNGGUUAAGGEE or the --LL option.  It also specifies the locale determining the character set in use, unless
           already specified through the eennvviirroonnmmeenntt vvaarriiaabbllee[12] LLCC__CCTTYYPPEE.  The value may begin with a two-letter ISO 639 language
           code, for example eenn, ddee, ffrr.

       HHOOMMEE
       UUSSEERR
           used for determining the value of the function UUSSEERR--HHOOMMEEDDIIRR--PPAATTHHNNAAMMEE[34].

       SSHHEELLLL
       CCOOMMSSPPEECC
           is used to find the interactive command interpreter called by EEXXTT::SSHHEELLLL.

       TTEERRMM
           determines the screen size recognized by the pretty printer.

       OORRGGAANNIIZZAATTIIOONN
           for SSHHOORRTT--SSIITTEE--NNAAMMEE[53] and LLOONNGG--SSIITTEE--NNAAMMEE[53] in config.lisp.

       CCLLHHSSRROOOOTT
           for CCUUSSTTOOMM::CCLLHHSS--RROOOOTT in config.lisp.

       IIMMPPNNOOTTEESS
           for CCUUSSTTOOMM::IIMMPPNNOOTTEESS--RROOOOTT in config.lisp.

       EEDDIITTOORR
           for eeddiittoorr--nnaammee in config.lisp.

       LLOOGGIICCAALL__HHOOSSTT___h_o_s_t__FFRROOMM
       LLOOGGIICCAALL__HHOOSSTT___h_o_s_t__TTOO
       LLOOGGIICCAALL__HHOOSSTT___h_o_s_t
           for _C_U_S_T_O_M_:_*_L_O_A_D_-_L_O_G_I_C_A_L_-_P_A_T_H_N_A_M_E_-_T_R_A_N_S_L_A_T_I_O_N_S_-_D_A_T_A_B_A_S_E_*

IINNPPUUTT AANNDD OOUUTTUUTT
       See Section 21.1.1, “Initialization of Standard Streams”.

SSEEEE AALLSSOO
           CLISP impnotes
           clisp-link(1)
           CCMMUU CCLL[54] - ccmmuuccll(1)
           EEmmaaccss[23] - eemmaaccss(1)
           XXEEmmaaccss[55] - xxeemmaaccss(1)

BBUUGGSS
       When you encounter a bug in CCLLIISSPP[6] or in its documentation (this manual page or CLISP impnotes), please report it to the
       CCLLIISSPP[6] SSoouurrcceeFFoorrggee bbuugg ttrraacckkeerr[56].

       _B_e_f_o_r_e submitting a bug report, please take the following basic steps to make the report more useful:

        1. Please do a clean build (remove your build directory and build CCLLIISSPP[6] with ..//ccoonnffiigguurree ----ccbbcc bbuuiilldd or at least do a
           mmaakkee ddiissttcclleeaann before mmaakkee).

        2. If you are reporting a “hard crash” (segmentation fault, bus error, core dump etc), please do ..//ccoonnffiigguurree ----wwiitthh--ddeebbuugg
           ----ccbbcc bbuuiilldd--gg ;; ccdd bbuuiilldd--gg;; ggddbb lliisspp..rruunn, then load the appropriate linking set by either bbaassee or ffuullll ggddbb[57] command,
           and report the backtrace (see also Q: A.1.1.10).

        3. If you are using pre-built binaries and experience a hard crash, the problem is likely to be in the incompatibilities
           between the platform on which the binary was built and yours; please try compiling the sources and report the problem if
           it persists.

       When submitting a bug report, please specify the following information:

        1. What is your platform (uunnaammee --aa on a UUNNIIXX[42] system)? Compiler version?  GGNNUU[8] lliibbcc[58] version (on GGNNUU[8]/_L_i_n_u_x[59])?

        2. Where did you get the sources or binaries? When? (Absolute dates, e.g., “2006-01-17”, are preferred over the relative
           ones, e.g., “2 days ago”).

        3. How did you build CCLLIISSPP[6]? (What command, options &c.)

        4. What is the output of cclliisspp ----vveerrssiioonn?

        5. Please supply the full output (copy and paste) of all the error messages, as well as detailed instructions on how to
           reproduce them.

PPRROOJJEECCTTSS
       ·   Enhance the compiler so that it can inline local functions.

       ·   Embed CCLLIISSPP[6] in VVIIMM[60].

AAUUTTHHOORRSS
       BBrruunnoo HHaaiibbllee <hhttttpp::////wwwwww..hhaaiibbllee..ddee//bbrruunnoo//>
           The original author and long-time maintainer.

       MMiicchhaaeell SSttoollll <hhttttpp::////wwwwww..ffaaccuullttyy..iiuu--bbrreemmeenn..ddee//mmssttoollll//>
           The original author.

       SSaamm SStteeiinnggoolldd <hhttttpp::////ssddss..ppooddvvaall..oorrgg//>
           Co-maintainer since 1998.

       OOtthheerrss
           See _C_O_P_Y_R_I_G_H_T _(_f_i_l_e _i_n _t_h_e _C_L_I_S_P _s_o_u_r_c_e_s_)  for the list of other contributors and the license.

CCOOPPYYRRIIGGHHTT
       Copyright © 1992-2010 Bruno Haible
       Copyright © 1998-2010 Sam Steingold

NNOOTTEESS
        1. CCoommmmoonn LLiisspp
           http://www.lisp.org

        2. read-eval-print loop
           [set $man.base.url.for.relative.links]/sec_25-1-1

        3. RREEAADD
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_readcm_re_g-whitespace.html

        4. EEVVAALL
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_eval.html

        5. PPRRIINNTT
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_writecm_p_rintcm_princ.html

        6. CCLLIISSPP
           http://clisp.cons.org

        7. LLIISSPP--IIMMPPLLEEMMEENNTTAATTIIOONN--VVEERRSSIIOONN
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_lisp-impl_tion-version.html

        8. GNU
           http://www.gnu.org

        9. GPL
           http://www.gnu.org/copyleft/gpl.html

       10. SYMBOL-MACRO
           [set $man.base.url.for.relative.links]/mac_define-symbol-macro

       11. ggzziipp
           http://www.gzip.org/

       12. environment variable
           [set $man.base.url.for.relative.links]/basedefs/xbd_chap08.html

       13. _*_L_O_A_D_-_V_E_R_B_O_S_E_*
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/var_stload-pr_ad-verbosest.html

       14. _*_C_O_M_P_I_L_E_-_V_E_R_B_O_S_E_*
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/var_stcompile_le-verbosest.html

       15. TT
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/convar_t.html

       16. NNIILL
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/convar_nil.html

       17. continuable
           [set $man.base.url.for.relative.links]/clhs/glo

       18. ERROR
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/contyp_error.html

       19. WARNING
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/contyp_warning.html

       20. IINNVVOOKKEE--DDEEBBUUGGGGEERR
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_invoke-debugger.html

       21. AABBOORRTT
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_abortcm_c_cm_use-value.html

       22. SSIIGGNNAALL
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_signal.html

       23. Emacs
           http://www.gnu.org/software/emacs/

       24. SLIME
           http://common-lisp.net/project/slime/

       25. ILISP
           http://sourceforge.net/projects/ilisp/

       26. readline
           http://tiswww.case.edu/php/chet/readline/readline.html

       27. _A_S_C_I_I
           http://en.wikipedia.org/wiki/ASCII

       28. _*_P_A_C_K_A_G_E_*
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/var_stpackagest.html

       29. _*_P_R_I_N_T_-_C_A_S_E_*
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/var_stprint-casest.html

       30. “COMMON-LISP-USER”
           [set $man.base.url.for.relative.links]/sec_11-1-2-2

       31. LLOOAADD
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_load.html

       32. CCOOMMPPIILLEE
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_compile.html

       33. “run
                control” (RC)
           http://www.faqs.org/docs/artu/ch10s03.html

       34. UUSSEERR--HHOOMMEEDDIIRR--PPAATTHHNNAAMMEE
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_user-homedir-pathname.html

       35. DDIISSAASSSSEEMMBBLLEE
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_disassemble.html

       36. _*_S_T_A_N_D_A_R_D_-_O_U_T_P_U_T_*
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/var_stdebug-i_ace-outputst.html

       37. LIST
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/syscla_list.html

       38. ANSI
           http://www.ansi.org/

       39. The American National Standards Institute

       40. Information Technology - Programming Language - Common Lisp
           http://webstore.ansi.org/RecordDetail.aspx?sku=ANSI+INCITS+226-1994+(R1999)

       41. SYMBOL
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/syscla_symbol.html

       42. UUNNIIXX
           http://www.unix.org/online.html

       43. _W_i_n_3_2
           http://winehq.org/

       44. #'
           [set $man.base.url.for.relative.links]/sec_2-4-8-2

       45. #P
           [set $man.base.url.for.relative.links]/sec_2-4-8-14

       46. bash
           http://www.gnu.org/software/bash/

       47. John Foderaro
           http://www.franz.com/~jkf/

       48. DDEEFFVVAARR
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/mac_defparametercm_defvar.html

       49. DDEEFFUUNN
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/mac_defun.html

       50. DDEEFFMMAACCRROO
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/mac_defmacro.html

       51. CCOOMMPPIILLEE--FFIILLEE
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_compile-file.html

       52. CC
           http://c-faq.com/

       53. SSHHOORRTT--SSIITTEE--NNAAMMEE
           http://www.ai.mit.edu/projects/iiip/doc/CommonLISP/HyperSpec/Body/fun_short-sit_ng-site-name.html

       54. CCMMUU CCLL
           http://www.cons.org/cmucl/

       55. XEmacs
           http://www.xemacs.org

       56. SourceForge bug tracker
           http://sourceforge.net/tracker/?func=add&group_id=1355&atid=101355

       57. ggddbb
           http://sources.redhat.com/gdb/

       58. libc
           http://www.gnu.org/software/libc/

       59. _L_i_n_u_x
           http://www.linux.org/

       60. VIM
           http://www.vim.org



CLISP 2.49                                            Last modified: 2010-07-07                                             CLISP(1)
